<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions/>
  <description>Build &amp; Deploy the UI</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.90">
    <script>pipeline{
    agent any
    stages{
        stage(&apos;Clone Git Repository&apos;) {
            steps {
                git &apos;https://github.com/ethmur/QATMS&apos;
            }
        }
        stage(&apos;npm Install Dependencies&apos;) {
            steps {
                dir(&apos;ui/&apos;) {
                    sh &apos;npm install&apos;
                }
            }
        }
        stage(&apos;npm Build&apos;) {
            steps {
                dir(&apos;ui/&apos;) {
                    sh &apos;npm run build&apos;
                }
            }
        }
        stage(&apos;Build Docker Image&apos;) {
            steps {
                dir(&apos;ui/&apos;) {
                    withCredentials([usernamePassword(credentialsId: &apos;dockerhub&apos;, usernameVariable: &apos;username&apos;, passwordVariable: &apos;password&apos;)]) {
                        script {
                            image = docker.build(&quot;${username}/tms_ui&quot;)
                        }
                    }
                }
            }
        }
        stage(&apos;Push Docker Image&apos;) {
            steps {
                script {
                    docker.withRegistry(&apos;https://registry.hub.docker.com&apos;, &apos;dockerhub&apos;) {
                        image.push()
                    }
                }
            }
        }
        stage(&apos;Deploy Kubernetes Container&apos;) {
            steps {
                dir(&apos;ui/&apos;) {
                    sh &quot;&quot;&quot;
                        kubectl delete -f kubefile.yaml --ignore-not-found=true
                        kubectl apply -f kubefile.yaml
                    &quot;&quot;&quot;
                }
            }
        }
        stage(&apos;Show Kubernetes Services&apos;) {
            steps {
                sh &apos;sleep 20&apos;
                sh &apos;kubectl get services&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
